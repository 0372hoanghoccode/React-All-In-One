import { useEffect, useState } from "react";

const App = () => {
    // 1. useEffect KH√îNG c√≥ dependency array - Ch·∫°y sau M·ªñI l·∫ßn render
    const [count, setCount] = useState(0);
    useEffect(() => {
        console.log("üèÉ‚Äç‚ôÇÔ∏è Ch·∫°y sau m·ªçi l·∫ßn render");
        document.title = `ƒê·∫øm: ${count}`;
    });

    // 2. useEffect C√ì dependency array - Ch·∫°y khi `value` thay ƒë·ªïi
    const [value, setValue] = useState("");
    useEffect(() => {
        console.log("üîî Value thay ƒë·ªïi:", value);
    }, [value]);

    // 3. useEffect v·ªõi CLEANUP FUNCTION - D·ªçn d·∫πp event listener
    const [windowWidth, setWindowWidth] = useState(window.innerWidth);
    useEffect(() => {
        const handleResize = () => setWindowWidth(window.innerWidth);
        window.addEventListener("resize", handleResize);

        return () => {
            console.log("üßπ D·ªçn d·∫πp tr∆∞·ªõc khi component unmount/re-render");
            window.removeEventListener("resize", handleResize);
        };
    }, []);

    // 4. Fetch DATA v·ªõi useEffect - L·∫•y d·ªØ li·ªáu t·ª´ API
    const [posts, setPosts] = useState([]);
    useEffect(() => {
        const fetchData = async () => {
            try {
                const response = await fetch("https://jsonplaceholder.typicode.com/posts");
                const data = await response.json();
                setPosts(data.slice(0, 5)); // L·∫•y 5 post ƒë·∫ßu
            } catch (error) {
                console.error("üö® L·ªói fetch data:", error);
            }
        };
        fetchData();
    }, []); // Ch·ªâ ch·∫°y 1 l·∫ßn sau mount

    return (
        <div style={{ padding: 20 }}>
            {/* Ph·∫ßn 1: Counter */}
            <div>
                <h2>ƒê·∫øm: {count}</h2>
                <button onClick={() => setCount(count + 1)}>TƒÉng</button>
            </div>

            {/* Ph·∫ßn 2: Input */}
            <div>
                <input
                    value={value}
                    onChange={(e) => setValue(e.target.value)}
                    placeholder="G√µ g√¨ ƒë√≥..."
                />
            </div>

            {/* Ph·∫ßn 3: Window width */}
            <div>
                <h2>Chi·ªÅu r·ªông c·ª≠a s·ªï: {windowWidth}px</h2>
            </div>

            {/* Ph·∫ßn 4: Hi·ªÉn th·ªã posts */}
            <div>
                <h2>B√†i vi·∫øt t·ª´ API:</h2>
                <ul>
                    {posts.map(post => (
                        <li key={post.id}>{post.title}</li>
                    ))}
                </ul>
            </div>
        </div>
    );
};

export default App;



